services:
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    hostname: azurite
    restart: always
    command: "azurite --blobHost 0.0.0.0 --blobPort 10000 --queueHost 0.0.0.0 --queuePort 10001"
    ports:
      - "10000:10000"
      - "10001:10001"
      # - "10002:10002"
    networks:
      - olearn

  # One-time data population
  populate:
    image: kamk/azurite-populate
    env_file:
      - .env
    build:
      context: ./src/azurite_populate
      dockerfile: Dockerfile
    networks:
      - olearn
    depends_on:
      - azurite

  # Frontend with streamlit app
  frontend:
    image: kamk/flowerui
    env_file:
      - .env
    hostname: flowerui
    build:
      context: ./src/flowerui
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    networks:
      - olearn
    depends_on:
      populate:
        condition: service_completed_successfully

  prediction:
    image: kamk/predictflower
    env_file:
      - .env
    hostname: predictflower
    build:
      context: ./src/predictflower
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    networks:
        - olearn
    depends_on:
      populate:
        condition: service_completed_successfully

  modeller:
    image: kamk/modeller
    hostname: modeller
    env_file:
      - .env
    build:
      context: ./src/modeller
      dockerfile: Dockerfile
    networks:
        - olearn
    depends_on:
      populate:
        condition: service_completed_successfully

networks:
  olearn:
    